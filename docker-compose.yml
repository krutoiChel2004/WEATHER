version: '3.8'
services:
  db: 
    image: postgres:15
    container_name: db_app
    ports:
      - "1221:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  weather_r_w:
    build: 
      context: /WeatherRW/
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
    ports:
      - "9999:8000"
    depends_on:
      - db

  weather_data_service:
    build: 
      context: /WeatherDataService/
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
    ports:
      - "9998:8080"
    depends_on:
      - db
      - weather_r_w

  web:
    build:
      context: /WeatherData/
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Прокидываем порт 3000 на хосте к порту 80 в контейнере
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
      - weather_r_w
      - weather_data_service

volumes:
  postgres_data:
